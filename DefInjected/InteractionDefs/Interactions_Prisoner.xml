<?xml version="1.0" encoding="utf-8" ?>
<LanguageData>

    <!-- BuildRapport -->
	<BuildRapport.label>try to getto know</BuildRapport.label>
    <BuildRapport.logRulesInitiator.rulesStrings>
	    <li>r_logentry->[INITIATOR_nameIndef] [toldastoryabout] [subject] to [RECIPIENT_nameIndef].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] told [RECIPIENT_nameIndef] about [subject].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] described [subject] to [RECIPIENT_nameIndef].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] encouraged [RECIPIENT_nameIndef] to [talkabout] [subject].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] offered a chance for [RECIPIENT_nameIndef] to [talkabout] [subject].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] expressed interest in [RECIPIENT_nameIndef]'s [PersonalCharacteristic].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] asked [RECIPIENT_nameIndef] about [RECIPIENT_possessive] [PersonalCharacteristic].</li>
	
	    <li>toldastoryabout(p=2)->told a story about</li>
	    <li>toldastoryabout->told a funny story about</li>
	    <li>toldastoryabout->told a heartfelt story about</li>
	    <li>toldastoryabout->told an old story about</li>
	    <li>toldastoryabout->told a family story about</li>
	    <li>toldastoryabout->told a childhood story about</li>
	    <li>toldastoryabout->mentioned an anecdote about</li>
	
	    <li>talkabout->talk about</li>
	    <li>talkabout->discuss</li>
	    <li>talkabout->have a discussion about</li>
	    <li>talkabout->ask about</li>
	    <li>talkabout->think about</li>
	    <li>talkabout->find common ground around</li>
	
	    <li>subject->the colony</li>
	    <li>subject->the community</li>
	    <li>subject->joining the colony</li>
	    <li>subject->changing teams</li>
	    <li>subject->finding friends</li>
	    <li>subject->meeting new people</li>
	    <li>subject->reconsidering [RECIPIENT_possessive] ideas</li>
	    <li>subject->rethinking [RECIPIENT_possessive] loyalties</li>
	    <li>subject->health</li>
	    <li>subject->the future</li>
	    <li>subject->letting go</li>
	    <li>subject(p=4)->[ConceptPositive]</li>
	    <li>subject(p=2)->[RECIPIENT_possessive] [PersonalCharacteristic]</li>
	    <li>subject(p=8)->[TalkTopic_light]</li>
    </BuildRapport.logRulesInitiator.rulesStrings>

    <!-- RecruitAttempt -->
	<RecruitAttempt.label>recruit attempt</RecruitAttempt.label>
    <RecruitAttempt.logRulesInitiator.rulesStrings>
	    <li>r_logentry->[INITIATOR_nameIndef] asked [RECIPIENT_nameIndef] to join.</li>
	    <li>r_logentry->[INITIATOR_nameIndef] promised [goodthing] to [RECIPIENT_nameIndef], and asked [RECIPIENT_objective] to join.</li>
	
	    <li>goodthing(p=15)->[ConceptPositive]</li>
	    <li>goodthing->free, fresh [Vegetable]s</li>
    </RecruitAttempt.logRulesInitiator.rulesStrings>

    <!-- SparkJailbreak -->
	<SparkJailbreak.label>spark jailbreak</SparkJailbreak.label>
    <SparkJailbreak.logRulesInitiator.rulesStrings>
	    <li>r_logentry->[INITIATOR_nameIndef] spoke about the joy of [freedom], and offered a means of escape.</li>
	    <li>r_logentry->[INITIATOR_nameIndef] talked about how beautiful the [TerrainFeature] is, and offered freedom.</li>
	    <li>r_logentry->[INITIATOR_nameIndef] demonstrated a means of escape to [RECIPIENT_nameIndef], and promised [freedom].</li>
	    <li>r_logentry->[INITIATOR_nameIndef] told [RECIPIENT_nameIndef] that security is lax, and encouraged escape.</li>
	
	    <li>freedom->freedom</li>
	    <li>freedom->opportunity</li>
	    <li>freedom->home</li>
	    <li>freedom->self-determination</li>
    </SparkJailbreak.logRulesInitiator.rulesStrings>

</LanguageData>